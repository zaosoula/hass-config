switch:
  # - platform: wake_on_lan
  #   name: wol_imac
  #   host: !secret wake_on_lan_host
  #   mac: !secret wake_on_lan_mac

  # - platform: command_line
  #   scan_interval: 300
  #   switches:
  #     playstation_5:
  #       friendly_name: Playstation
  #       command_state: !secret playstation_5_state
  #       value_template: >
  #         {{ value == 'ON' }}
  #       command_on: !secret playstation_5_wake
  #       command_off: !secret playstation_5_sleep

  # - platform: mqtt
  #   name: switchbot_mqtt
  #   command_topic: !secret switchbot_mqtt_command
  #   state_topic: !secret switchbot_mqtt_state

  # - platform: template
  #   switches:
  #     computer_imac:
  #       friendly_name: Dator
  #       icon_template: custom:imac-alternative
  #       value_template: >
  #         {{ is_state('switch.wol_imac', 'on') }}
  #       turn_on:
  #         - service: switch.toggle
  #           target:
  #             entity_id: switch.switchbot_mqtt
  #         - service: light.turn_on
  #           target:
  #             entity_id: light.dator
  #       turn_off:
  #         if:
  #           condition: state
  #           entity_id: input_boolean.computer_lock
  #           state: 'on'
  #         then:
  #           service: browser_mod.toast
  #           data:
  #             duration: 8000
  #             message: Dator 채r l책st fr책n att st채ngas av...
  #         else:
  #           service: shell_command.imac_off

  #     monitors_mute:
  #       value_template: >
  #         {{ is_state('binary_sensor.monitors_mute_state', 'on') }}
  #       turn_on:
  #         - service: shell_command.monitors_mute_on
  #         - service: homeassistant.update_entity
  #           target:
  #             entity_id: binary_sensor.monitors_mute_state
  #       turn_off:
  #         - service: shell_command.monitors_mute_off
  #         - service: homeassistant.update_entity
  #           target:
  #             entity_id: binary_sensor.monitors_mute_state
