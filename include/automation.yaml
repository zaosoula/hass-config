automation:
  # - alias: homeassistant_start
  #   id: '7426848686945'
  #   trigger:
  #     platform: homeassistant
  #     event: start
  #   action:
  #     - service: button.press
  #       target:
  #         entity_id: button.galaxy_tab_a_restart_browser
  #     - delay:
  #         minutes: 1
  #     - if:
  #         condition: state
  #         entity_id: light.group_hall
  #         state: 'off'
  #       then:
  #         service: switch.turn_on
  #         target:
  #           entity_id: switch.galaxy_tab_a_screensaver

  # - alias: lovelace_updated_ignore
  #   id: '9381519720051'
  #   mode: restart
  #   trigger:
  #     platform: event
  #     event_type: lovelace_updated
  #   action:
  #     service: browser_mod.toast
  #     data:
  #       duration: 1
  #       message: ' '

  # - alias: clear_log_filesize
  #   id: '3331821824310'
  #   trigger:
  #     platform: numeric_state
  #     entity_id: sensor.home_assistant_log_size
  #     above: 50
  #   action:
  #     service: shell_command.ha_purge_logs

  # - alias: climate_safeguard
  #   id: '0374158275864'
  #   trigger:
  #     platform: state
  #     entity_id: climate.ac
  #     to: cool
  #   condition:
  #     condition: state
  #     entity_id: binary_sensor.aqara_contact_window
  #     state: 'off'
  #   action:
  #     service: climate.set_hvac_mode
  #     target:
  #       entity_id: climate.ac
  #     data:
  #       hvac_mode: fan_only

  # - alias: waste_collection
  #   id: '5611101897022'
  #   trigger:
  #     platform: time
  #     at: '22:30'
  #   condition:
  #     and:
  #       - condition: state
  #         entity_id: sensor.sophamtning
  #         state: '1'
  #       - condition: state
  #         entity_id: binary_sensor.aqara_contact_window
  #         state: 'on'
  #   action:
  #     service: notify.ALL_DEVICES
  #     data:
  #       title: >
  #         {{ '\u267B' }} Sophämtning imorgon
  #       message: Stäng fönstret!

  # - alias: vacuum_empty_bin
  #   id: '5443599527378'
  #   variables:
  #     vacuum: vacuum.morty
  #   trigger:
  #     platform: state
  #     entity_id: sensor.morty_total_clean_count
  #   condition: >
  #     {{ not is_state(vacuum, 'docked') }}
  #   action:
  #     - delay:
  #         seconds: 3
  #     - if: >
  #         {{ is_state(vacuum, 'returning') }}
  #       then:
  #         - service: vacuum.pause
  #           target:
  #             entity_id: >
  #               {{ vacuum }}
  #         - delay:
  #             seconds: 2
  #         - service: xiaomi_miio.vacuum_goto
  #           target:
  #             entity_id: >
  #               {{ vacuum }}
  #           data:
  #             x_coord: 16821
  #             y_coord: 23105

  #   ####################################################
  #   #                                                  #
  #   #                      LIGHTS                      #
  #   #                                                  #
  #   ####################################################

  # - alias: tv_on_lights
  #   id: '6657050215613'
  #   trigger:
  #     platform: state
  #     entity_id: media_player.sony_bravia_tv
  #     from: 'off'
  #     to: 'on'
  #   action:
  #     service: light.turn_on
  #     target:
  #       entity_id: light.tv

  # - alias: imac_on_lights
  #   id: '1336620978344'
  #   trigger:
  #     - platform: state
  #       entity_id: switch.computer_imac
  #       from: 'off'
  #       to: 'on'
  #     - platform: state
  #       entity_id: switch.computer_imac
  #       from: 'on'
  #       to: 'off'
  #       for:
  #         minutes: 30
  #   action:
  #     service: >
  #       light.turn_{{ trigger.to_state.state }}
  #     target:
  #       entity_id: light.dator

  # - alias: no_motion_bathroom
  #   id: '9936892396917'
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.sensor_badrum_motion
  #     to: 'off'
  #     for:
  #       minutes: 30
  #   action:
  #     service: light.turn_off
  #     target:
  #       entity_id: light.group_badrum

  # - alias: balcony
  #   id: '1522208581249'
  #   mode: restart
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.wemo_motion
  #     from:
  #       - 'on'
  #       - 'off'
  #     to:
  #       - 'on'
  #       - 'off'
  #   action:
  #     if: >
  #       {{ trigger.to_state.state == 'on' and
  #       is_state('sun.sun', 'below_horizon') }}
  #     then:
  #       service: switch.turn_on
  #       target:
  #         entity_id: switch.deltaco_sh_p01
  #     else:
  #       - delay:
  #           minutes: 25
  #       - service: switch.turn_off
  #         target:
  #           entity_id: switch.deltaco_sh_p01

  #   ####################################################
  #   #                                                  #
  #   #                  NOTIFICATIONS                   #
  #   #                                                  #
  #   ####################################################

  # - alias: toast
  #   id: '3900676590344'
  #   mode: parallel
  #   trigger:
  #     platform: state
  #     entity_id:
  #       - binary_sensor.sensor_garderob_motion
  #       - binary_sensor.sensor_badrum_motion
  #       - binary_sensor.wemo_motion
  #     from: 'off'
  #     to: 'on'
  #   action:
  #     service: browser_mod.toast
  #     data:
  #       duration: 3000
  #       message: >
  #         Rörelse detekterat i {{ trigger.to_state.name }}

  # - alias: macos_notification_motion_hall
  #   id: '4135668040301'
  #   initial_state: false
  #   trigger:
  #     platform: state
  #     entity_id: binary_sensor.sensor_hall_motion
  #     from: 'off'
  #     to: 'on'
  #   condition:
  #     condition: state
  #     entity_id: switch.computer_imac
  #     state: 'on'
  #   action:
  #     service: notify.mobile_app_mattias_imac
  #     data:
  #       message: Rörelse i hallen detekterat
  #       title: Home Assistant

  # - alias: ios_notify_hass_update
  #   id: '7958228563778'
  #   variables:
  #     latest: >
  #       {{ states(trigger.entity_id) }}
  #     installed: >
  #       {{ states('sensor.hass_version_installed') }}
  #   trigger:
  #     platform: state
  #     entity_id: sensor.hass_version_latest
  #   condition: >
  #     {{ installed != latest if '.' in installed and '.' in latest else false }}
  #   action:
  #     - service: homeassistant.update_entity
  #       target:
  #         entity_id:
  #           - sensor.hass_release_notes
  #           - sensor.hass_release_notes_rc
  #     - delay:
  #         minutes: 30
  #     - service: notify.mobile_app_mattias_iphone_ios
  #       data:
  #         title: >
  #           {{ latest }} tillgänglig {{ '\U0001F389' }}
  #         message: Håll in för att uppdatera
  #         data:
  #           url: https://www.home-assistant.io/latest-release-notes/
  #           actions:
  #             - action: START_WATCHTOWER
  #               title: Uppdatera

  # - alias: ios_notify_hass_update_action
  #   id: '0694774018396'
  #   trigger:
  #     platform: event
  #     event_type: mobile_app_notification_action
  #     event_data:
  #       action: START_WATCHTOWER
  #   action:
  #     service: switch.turn_on
  #     target:
  #       entity_id: switch.docker_watchtower

  # - alias: notify_and_remove_completed_torrent
  #   id: '7876919385611'
  #   mode: parallel
  #   max: 25
  #   trigger:
  #     platform: event
  #     event_type: transmission_downloaded_torrent
  #   action:
  #     - service: notify.ALL_DEVICES
  #       data:
  #         title: Torrent nedladdad
  #         message: >
  #           {{ trigger.event.data.name }}
  #     - service: transmission.stop_torrent
  #       data:
  #         name: Transmission
  #         id: >
  #           {{ trigger.event.data.id }}
  #     - service: homeassistant.update_entity
  #       target:
  #         entity_id: sensor.plex_recently_added
  #     - delay:
  #         minutes: 10
  #     - service: transmission.remove_torrent
  #       data:
  #         name: Transmission
  #         id: >
  #           {{ trigger.event.data.id }}

  # - alias: ios_notify_tablet_unplugged
  #   id: '3972668118831'
  #   trigger:
  #     platform: numeric_state
  #     entity_id: sensor.galaxy_tab_a_battery_level
  #     below: 50
  #   action:
  #     service: notify.ALL_DEVICES
  #     data:
  #       title: Ladda väggplattan...
  #       message: >
  #         Batteri {{ states(trigger.entity_id) }}%

  #   ####################################################
  #   #                                                  #
  #   #                  SCAN INTERVAL                   #
  #   #                                                  #
  #   ####################################################

  # - alias: conditional_scan_interval
  #   id: '0007659752611'
  #   trigger:
  #     - platform: time_pattern
  #       minutes: /5
  #     - platform: state
  #       entity_id: switch.computer_imac
  #       from: 'off'
  #       to: 'on'
  #   condition:
  #     condition: state
  #     entity_id: switch.computer_imac
  #     state: 'on'
  #   action:
  #     service: homeassistant.update_entity
  #     target:
  #       entity_id:
  #         - sensor.imac_cpu
  #         - sensor.imac_mem
  #         - sensor.imac_uptime
  #         - sensor.imac_ip
  #         - sensor.monitors_volume
  #         - binary_sensor.monitors_mute_state

  # - alias: skanetrafiken_scan_interval
  #   id: '0745322571221'
  #   trigger:
  #     platform: time_pattern
  #     minutes: /5
  #   condition:
  #     not:
  #       condition: time
  #       after: '01:00:00'
  #       before: '04:00:00'
  #   action:
  #     service: homeassistant.update_entity
  #     target:
  #       entity_id: sensor.skanetrafiken

  #   ####################################################
  #   #                                                  #
  #   #                     MONITORS                     #
  #   #                                                  #
  #   ####################################################

  # - alias: monitors_volume_slider
  #   id: '0022255594357'
  #   trigger:
  #     platform: state
  #     entity_id: input_number.monitors_volume
  #   condition:
  #     condition: state
  #     entity_id: switch.computer_imac
  #     state: 'on'
  #   action:
  #     - service: shell_command.monitors_volume_slider
  #     - service: homeassistant.update_entity
  #       target:
  #         entity_id: binary_sensor.monitors_mute_state
  #     - service: homeassistant.update_entity
  #       target:
  #         entity_id: sensor.monitors_volume

  # - alias: monitors_volume_update
  #   id: '1275485733091'
  #   variables:
  #     min: 7
  #     max: 75
  #     volume: >
  #       {{ states(trigger.entity_id) | int }}
  #   trigger:
  #     platform: state
  #     entity_id: sensor.monitors_volume
  #   condition:
  #     condition: state
  #     entity_id: switch.computer_imac
  #     state: 'on'
  #   action:
  #     - service: homeassistant.update_entity
  #       target:
  #         entity_id: binary_sensor.monitors_mute_state
  #     - service: input_number.set_value
  #       target:
  #         entity_id: input_number.monitors_volume
  #       data:
  #         value: >
  #           {{ max if volume > max else iif(volume < min, min, volume) }}

  # - alias: eq_calibration
  #   id: '7780410156815'
  #   mode: queued
  #   trigger:
  #     platform: state
  #     entity_id: switch.gosund_monitors_switch
  #     from:
  #       - 'on'
  #       - 'off'
  #     to:
  #       - 'on'
  #       - 'off'
  #   action:
  #     if:
  #       condition: state
  #       entity_id: switch.gosund_monitors_switch
  #       state: 'on'
  #     then:
  #       service: shell_command.reference_monitors
  #     else:
  #       service: shell_command.reference_headphones

  # - alias: turn_off_monitors
  #   id: '9863921240123'
  #   trigger:
  #     platform: state
  #     entity_id: switch.computer_imac
  #     from: 'on'
  #     to: 'off'
  #     for:
  #       minutes: 15
  #   action:
  #     service: switch.turn_off
  #     target:
  #       entity_id: switch.gosund_monitors_switch

  #   ####################################################
  #   #                                                  #
  #   #                       FAN 1                      #
  #   #                                                  #
  #   ####################################################

  # - alias: fan_turn_off
  #   id: '0568618309657'
  #   trigger:
  #     - platform: state
  #       entity_id: switch.gosund_fan_switch
  #       from: 'off'
  #       to: 'on'
  #       for:
  #         hours: >
  #           {{ states('input_number.fan_timer') | int }}
  #     - platform: state
  #       entity_id: switch.computer_imac
  #       from: 'on'
  #       to: 'off'
  #       for:
  #         minutes: 15
  #   action:
  #     service: switch.turn_off
  #     target:
  #       entity_id: switch.gosund_fan_switch

  #   ####################################################
  #   #                                                  #
  #   #                      TABLET                      #
  #   #                                                  #
  #   ####################################################

  # - alias: fullykiosk_screensaver
  #   id: '9452750674803'
  #   mode: restart
  #   trigger:
  #     - platform: state
  #       entity_id: binary_sensor.sensor_hall_motion
  #       from: 'off'
  #       to: 'on'
  #     - platform: state
  #       entity_id: light.group_hall
  #       from: 'on'
  #       to: 'off'
  #   action:
  #     if: >
  #       {{ 'sensor_hall_motion' in trigger.entity_id }}
  #     then:
  #       - service: switch.turn_off
  #         target:
  #           entity_id: switch.galaxy_tab_a_screensaver
  #       - service: light.turn_on
  #         target:
  #           entity_id: light.galaxy_tab_a_screen
  #         data:
  #           brightness_pct: >
  #             {{ iif(is_state('sun.sun', 'above_horizon'), 90, 65) }}
  #     else:
  #       - service: switch.turn_on
  #         target:
  #           entity_id: switch.galaxy_tab_a_screensaver
  #       - delay:
  #           minutes: 15
  #       - service: browser_mod.close_popup
  #         data:
  #           deviceID: dd239c79_406b9d77

  #   ####################################################
  #   #                                                  #
  #   #                    HDMI / TV                     #
  #   #                                                  #
  #   ####################################################

  # - alias: turn_on_tv_flow
  #   id: '0703991107325'
  #   mode: parallel
  #   variables:
  #     entity_id: >
  #       {{ trigger.event.data.service_data.entity_id }}
  #   trigger:
  #     - platform: event
  #       event_type: call_service
  #       event_data:
  #         domain: media_player
  #         service: turn_on
  #         service_data:
  #           entity_id:
  #             - media_player.sony_bravia_tv
  #             - media_player.samsung_tv
  #     - platform: event
  #       event_type: call_service
  #       event_data:
  #         domain: switch
  #         service: turn_on
  #         service_data:
  #           entity_id: switch.playstation_5
  #   action:
  #     - service: media_player.turn_on
  #       target:
  #         entity_id: >
  #           {% if 'sony_bravia_tv' in entity_id %}
  #             media_player.vardagsrum
  #           {% elif 'samsung_tv' in entity_id %}
  #             media_player.sovrum
  #           {% elif 'playstation_5' in entity_id %}
  #             media_player.samsung_tv
  #           {% endif %}
  #     - if: >
  #         {{ 'playstation_5' in entity_id }}
  #       then:
  #         service: media_player.select_source
  #         target:
  #           entity_id: media_player.samsung_tv
  #         data:
  #           source: PS5
  #       else:
  #         service: remote.send_command
  #         target:
  #           entity_id: >
  #             {% if 'sony_bravia_tv' in entity_id %}
  #               remote.vardagsrum
  #             {% elif 'samsung_tv' in entity_id %}
  #               remote.sovrum
  #             {% endif %}
  #         data:
  #           command: wakeup

  #   ####################################################
  #   #                                                  #
  #   #                  LAUNDRY TIMER                   #
  #   #                                                  #
  #   ####################################################

  # - alias: laundry_display
  #   id: '4792508317061'
  #   mode: restart
  #   trigger:
  #     platform: time_pattern
  #     minutes: /5
  #   condition: >
  #     {% set start_time = state_attr('calendar.tvatta', 'start_time') %}
  #     {{ as_timestamp(start_time) - as_timestamp(now()) < 10 * 60 if start_time != None else false }}
  #   action:
  #     - service: input_boolean.turn_on
  #       target:
  #         entity_id: input_boolean.laundry_display
  #     - delay:
  #         hours: 4
  #     - service: input_boolean.turn_off
  #       target:
  #         entity_id: input_boolean.laundry_display

  # - alias: laundry_alert
  #   id: '3403466403120'
  #   trigger:
  #     platform: event
  #     event_type: timer.finished
  #     event_data:
  #       entity_id: timer.laundry
  #   action:
  #     - service: media_player.play_media
  #       target:
  #         entity_id: media_player.browser_dd239c79_406b9d77
  #       data:
  #         media_content_id: /local/sound/timer.mp3
  #         media_content_type: music
  #     - service: notify.all_devices
  #       data:
  #         message: >
  #           {{'\U0001F9FA'}} {{ ['Tvätten är färdig', 'Tvätten är klar', 'Dags att gå ner'] | random }}

  # - alias: laundry_notify_ios_shorcuts
  #   id: '2360411947125'
  #   trigger:
  #     platform: event
  #     event_type: call_service
  #     event_data:
  #       domain: google
  #       service: add_event
  #   action:
  #     service: notify.mobile_app_mattias_iphone_ios
  #     data:
  #       title: Tvättid tillagd
  #       message: >
  #         {% set date = trigger.event.data.service_data.start_date_time | as_datetime %}
  #         {% set day = ['Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag', 'Söndag'] %}
  #         {% set month = ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'] %}
  #         {{ day[date.weekday()] }}, {{ date.day }} {{ month[date.month - 1] }} {{ date.strftime('%H') }}:{{ date.strftime('%M') }}

  #   ####################################################
  #   #                                                  #
  #   #                   PERSISTENCE                    #
  #   #                                                  #
  #   ####################################################

  # - alias: person_home
  #   id: '8423590985012'
  #   mode: parallel
  #   trigger:
  #     platform: state
  #     entity_id:
  #       - person.matte
  #       - person.sanja
  #     from:
  #       - home
  #       - not_home
  #     to:
  #       - home
  #       - not_home
  #   action:
  #     service: mqtt.publish
  #     data:
  #       topic_template: >
  #         homeassistant/persistence/{{ trigger.to_state.name | lower }}
  #       payload_template: >
  #         {{ now() }}
  #       retain: true

  # - alias: mailbox_count
  #   id: '2878459556162'
  #   mode: restart
  #   trigger:
  #     platform: state
  #     entity_id:
  #       - binary_sensor.aqara_contact_count
  #       - binary_sensor.aqara_contact_reset
  #     from: 'off'
  #     to: 'on'
  #   condition: >
  #     {{ as_timestamp(now()) - as_timestamp(state_attr(this.entity_id,
  #     'last_triggered')) > 7 or 'reset' in trigger.entity_id }}
  #   action:
  #     service: mqtt.publish
  #     data:
  #       topic: homeassistant/persistence/mailbox
  #       payload_template: >
  #         {{ iif('reset' in trigger.entity_id, 0, states('sensor.mailbox') | int + 1) }}
  #       retain: true
